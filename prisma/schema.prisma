// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  username String   @unique
  email     String   @unique
  password  String
  authority Int @default(0)
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products Product[]
  @@map("categories")
}

model Product {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  categoryId String @db.ObjectId
  description      String?
  price     Int
  stock     Int
  image String?
  orderItem   OrderItem[]
  category Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model OrderItem {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId    String   @db.ObjectId
  productId  String   @db.ObjectId
  quantity   Int
  unitCost Int
  total Int
  supply Boolean @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  order      Order    @relation(fields: [orderId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model Order {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  userId     String     @db.ObjectId
  completed  Boolean    @default(false)
  
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  user       User       @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}